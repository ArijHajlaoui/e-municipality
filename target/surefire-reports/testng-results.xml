<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="9" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="114248" started-at="2020-11-02T20:15:41 CET" finished-at="2020-11-02T20:17:35 CET">
    <groups>
    </groups>
    <test name="Test" duration-ms="114248" started-at="2020-11-02T20:15:41 CET" finished-at="2020-11-02T20:17:35 CET">
      <class name="mycompany.login">
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="4833" started-at="2020-11-02T20:15:41 CET" finished-at="2020-11-02T20:15:46 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="log(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="log" duration-ms="3108" started-at="2020-11-02T20:15:46 CET" data-provider="getdata1" finished-at="2020-11-02T20:15:49 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- log -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="4654" started-at="2020-11-02T20:15:49 CET" finished-at="2020-11-02T20:15:53 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="log(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="log" duration-ms="4997" started-at="2020-11-02T20:15:53 CET" data-provider="getdata1" finished-at="2020-11-02T20:15:58 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- log -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="7083" started-at="2020-11-02T20:15:58 CET" finished-at="2020-11-02T20:16:05 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="4002" started-at="2020-11-02T20:16:05 CET" data-provider="getdata2" finished-at="2020-11-02T20:16:09 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yahya]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="6055" started-at="2020-11-02T20:16:09 CET" finished-at="2020-11-02T20:16:16 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="4022" started-at="2020-11-02T20:16:16 CET" data-provider="getdata2" finished-at="2020-11-02T20:16:20 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahya1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yahya1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="5224" started-at="2020-11-02T20:16:20 CET" finished-at="2020-11-02T20:16:25 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3895" started-at="2020-11-02T20:16:25 CET" data-provider="getdata2" finished-at="2020-11-02T20:16:29 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="5713" started-at="2020-11-02T20:16:29 CET" finished-at="2020-11-02T20:16:34 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3996" started-at="2020-11-02T20:16:34 CET" data-provider="getdata2" finished-at="2020-11-02T20:16:38 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahyaaaa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yahyaaaa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="7401" started-at="2020-11-02T20:16:38 CET" finished-at="2020-11-02T20:16:46 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="FAIL" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="9382" started-at="2020-11-02T20:16:46 CET" data-provider="getdata2" finished-at="2020-11-02T20:16:55 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[YAHYAAAA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YAHYAAAA]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Account successfully created.] but found [Account successfully created.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Account successfully created.] but found [Account successfully created.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at mycompany.login.signup(login.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="5129" started-at="2020-11-02T20:16:55 CET" finished-at="2020-11-02T20:17:00 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="13290" started-at="2020-11-02T20:17:00 CET" data-provider="getdata2" finished-at="2020-11-02T20:17:14 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yahya1234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Yahya12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="14504" started-at="2020-11-02T20:17:14 CET" finished-at="2020-11-02T20:17:28 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="6883" started-at="2020-11-02T20:17:28 CET" data-provider="getdata2" finished-at="2020-11-02T20:17:35 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yahya123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Yahya1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
      </class> <!-- mycompany.login -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
