<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="9" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="85515" started-at="2020-11-05T22:48:50 CET" finished-at="2020-11-05T22:50:16 CET">
    <groups>
    </groups>
    <test name="Test" duration-ms="85515" started-at="2020-11-05T22:48:50 CET" finished-at="2020-11-05T22:50:16 CET">
      <class name="mycompany.login">
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="7794" started-at="2020-11-05T22:48:50 CET" finished-at="2020-11-05T22:48:58 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="log(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="log" duration-ms="3908" started-at="2020-11-05T22:48:58 CET" data-provider="getdata1" finished-at="2020-11-05T22:49:02 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- log -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="4996" started-at="2020-11-05T22:49:02 CET" finished-at="2020-11-05T22:49:07 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="log(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="log" duration-ms="5562" started-at="2020-11-05T22:49:07 CET" data-provider="getdata1" finished-at="2020-11-05T22:49:13 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- log -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="3671" started-at="2020-11-05T22:49:13 CET" finished-at="2020-11-05T22:49:16 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3744" started-at="2020-11-05T22:49:16 CET" data-provider="getdata2" finished-at="2020-11-05T22:49:20 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yahya]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="3831" started-at="2020-11-05T22:49:20 CET" finished-at="2020-11-05T22:49:24 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3517" started-at="2020-11-05T22:49:24 CET" data-provider="getdata2" finished-at="2020-11-05T22:49:27 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahya1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yahya1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="4697" started-at="2020-11-05T22:49:27 CET" finished-at="2020-11-05T22:49:32 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3670" started-at="2020-11-05T22:49:32 CET" data-provider="getdata2" finished-at="2020-11-05T22:49:36 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="5490" started-at="2020-11-05T22:49:36 CET" finished-at="2020-11-05T22:49:41 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3612" started-at="2020-11-05T22:49:41 CET" data-provider="getdata2" finished-at="2020-11-05T22:49:45 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[yahyaaaa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yahyaaaa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="3720" started-at="2020-11-05T22:49:45 CET" finished-at="2020-11-05T22:49:49 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="FAIL" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="6267" started-at="2020-11-05T22:49:49 CET" data-provider="getdata2" finished-at="2020-11-05T22:49:55 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[YAHYAAAA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YAHYAAAA]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Account successfully created.] but found [Account successfully created.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Account successfully created.] but found [Account successfully created.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at mycompany.login.signup(login.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="4005" started-at="2020-11-05T22:49:55 CET" finished-at="2020-11-05T22:49:59 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="3922" started-at="2020-11-05T22:49:59 CET" data-provider="getdata2" finished-at="2020-11-05T22:50:03 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yahya1234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Yahya12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:mycompany.login@5d76b067]" name="launch" is-config="true" duration-ms="7579" started-at="2020-11-05T22:50:03 CET" finished-at="2020-11-05T22:50:10 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="signup(java.lang.String, java.lang.String)[pri:0, instance:mycompany.login@5d76b067]" name="signup" duration-ms="5491" started-at="2020-11-05T22:50:10 CET" data-provider="getdata2" finished-at="2020-11-05T22:50:16 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yahya123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Yahya1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
      </class> <!-- mycompany.login -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
